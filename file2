
#include "ConfigBuilder.hpp"
#include "ServerConf.hpp"
#include "Request.hpp"
#include "Server.hpp"
#include <iostream>
// #include <exception>
// #include <cstdlib>
#include <csignal>

static bool g_running = true;

void signalHandler(int) {
    g_running = false;
}

int main(int argc, char **argv) {
    if (argc > 2) {
        std::cerr << "Usage: ./webserv [config_file]" << std::endl;
        return 1;
    }
    signal(SIGINT, signalHandler);
    signal(SIGTERM, signalHandler);
    signal(SIGPIPE, SIG_IGN);

	std::string config_file = ac > 1? av[1]: "config/default.conf";

	t_user user1;
    user1.username = "hmrabet";
    user1.password = "hmrabet123";
    user1.email = "hmrabet@student.1337.ma";
	user1.fullName = "Houssam Mrabet";
	user1.job = "Web Developer";
	user1.avatar = "./assets/houbet.jpeg";
    
    t_user user2;
    user2.username = "mel-hamd";
    user2.password = "mel-hamd123";
    user2.email = "mel-hamd@student.1337.ma";
	user2.fullName = "Mohammed El Hamdaoui";
	user2.job = "Backend Developer";
	user2.avatar = "./assets/mel-hamd.jpg";

    t_user user3;
    user3.username = "cmasnaou";
    user3.password = "cmasnaou123";
    user3.email = "cmasnaou@student.1337.ma";
	user3.fullName = "Chorouk Masnaoui";
	user3.job = "Frontend Developer";
	user3.avatar = "./assets/cmasnaou.jpg";

    // Assign them to the static vector
    Request::users.push_back(user1);
    Request::users.push_back(user2);
    Request::users.push_back(user3);

    try {
		std::vector<ServerConf> config = ConfigBuilder::generateServers(config_file);
        Server server(config);
        
        while (g_running) {
            server.runOnce();
        }
        
        std::cout << "\nShutting down server..." << std::endl;
    }
    catch (const std::exception &e) {
        std::cerr << "Error: " << e.what() << std::endl;
        return 1;
    }
    
    return 0;
}